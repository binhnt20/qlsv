@charset "utf-8";
@import url('https://fonts.googleapis.com/css2?family=Ysabeau+Infant:ital,wght@0,1;0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;0,1000;1,1;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900;1,1000&display=swap');
@import url('https://code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css');
@import url('https://pro.fontawesome.com/releases/v5.10.0/css/all.css');
$experimental-support-for-svg: true;

//----------------------------------------------//
//  Media Queries								//
//----------------------------------------------//
$bp_tab: 1199px; //tab
$bp_sp: 767px; //sp

@mixin mq($device, $val: null, $val2: null) {
  @if $device == pc {
    //pc
    @media only screen and (min-width: $bp_tab + 1) {
      @content;
    }
    @media print {
      @content;
    }
  } @else if $device == pc_s {
    //pc_s
    @media only screen and (min-width: $bp_tab + 1) and (max-width: ($bp_tab + 1) + (1920 - ($bp_tab + 1)) / 2) {
      @content;
    }
  } @else if $device == pc_l {
    //pc_l
    @media only screen and (min-width: ($bp_tab + 1) + (1920 - ($bp_tab + 1)) / 2 + 1) {
      @content;
    }
    @media print {
      @content;
    }
  } @else if $device == tab {
    //tab
    @media only screen and (min-width: $bp_sp + 1) and (max-width: $bp_tab) {
      @content;
    }
  } @else if $device == tab_l {
    //tab_l
    @media only screen and (min-width: ($bp_tab - $bp_sp) / 2 + $bp_sp + 1) and (max-width: $bp_tab) {
      @content;
    }
  } @else if $device == tab_s {
    //tab_s
    @media only screen and (min-width: $bp_sp + 1) and (max-width: ($bp_tab - $bp_sp) / 2 + $bp_sp) {
      @content;
    }
  } @else if $device == sp {
    //sp
    @media only screen and (max-width: $bp_sp) {
      @content;
    }
  } @else if $device == sp_l {
    //sp_l
    @media only screen and (min-width: ($bp_sp - 320) / 2 + 320 + 1) and (max-width: $bp_sp) {
      @content;
    }
  } @else if $device == sp_s {
    //sp_s
    @media only screen and (max-width: ($bp_sp - 320) / 2 + 320) {
      @content;
    }
  } @else if $device == pc_tab {
    //pc & tab
    @media only screen and (min-width: $bp_sp + 1) {
      @content;
    }
  } @else if $device == tab_sp {
    //tab & sp
    @media only screen and (max-width: $bp_tab) {
      @content;
    }
  } @else if $device == min_w {
    //max-width
    @media only screen and (min-width: $val) {
      @content;
    }
  } @else if $device == max_w {
    //min-width
    @media only screen and (max-width: $val) {
      @content;
    }
  } @else if $device == min_max_w {
    //min-width ~ max-width
    @media only screen and (min-width: $val) and (max-width: $val2) {
      @content;
    }
  } @else if $device == min_h {
    //max-height
    @media only screen and (min-height: $val) {
      @content;
    }
  } @else if $device == max_h {
    //min-height
    @media only screen and (max-height: $val) {
      @content;
    }
  } @else if $device == min_max_h {
    //min-height ~ max-height
    @media only screen and (min-height: $val) and (max-height: $val2) {
      @content;
    }
  }
}

//----------------------------------------------//
//  Variable									//
//----------------------------------------------//

$columnWidth: 1280;
$baseSize: 16;
$baseSizeSp: 14;

$baseColor: #000;
$CoolBlue: #507eb6;
$LapisBlue: #173576;
$DeepCove: #0a143c;
$RangoonGreen: #191919;
$Porcelain: #edf2f8;

//----------------------------------------------//
//  Function									//
//----------------------------------------------//
@function wCon($width, $parentWidth: $columnWidth) {
  @return $width / $parentWidth * 100%;
}

//----------------------------------------------//
//  Placeholder									//
//----------------------------------------------//
%bw {
  width: 90%;
  max-width: $columnWidth + px;
  margin: auto;
  @include mq(tab_sp) {
    width: 880 / 960 * 100%;
  }
}
%bw_l {
  width: 90%;
  margin: auto;
  @include mq(pc) {
    padding: 0 50px;
  }
  @include mq(tab_sp) {
    width: 880 / 960 * 100%;
  }
}

%cf {
  &:after {
    content: '';
    display: table;
    clear: both;
  }
}

//----------------------------------------------//
//  mixin										//
//----------------------------------------------//
@mixin fsz($size: $baseSize, $parent: null) {
  $i: $size * (100 / $baseSize);

  @if $parent == null {
    font-size: ceil($i * 1%);
  } @else {
    font-size: ceil(100% * ($size / $parent));
  }
}
@mixin fsz-cha($pc_fsz: 30, $tab_fsz: 30, $sp_fsz: 17) {
  @include fsz($pc_fsz);
  @include mq(tab) {
    @include fsz($tab_fsz);
  }
  @include mq(sp) {
    @include fsz($sp_fsz);
  }
}

@mixin cV($pro, $v1: 0, $v2: 0, $v3: null) {
  #{$pro}: $v1;
  @if $v3 == null {
    @include mq(sp) {
      #{$pro}: $v2;
    }
  } @else {
    @include mq(tab) {
      #{$pro}: $v2;
    }
    @include mq(sp) {
      #{$pro}: $v3;
    }
  }
}

@mixin zoomImg($mag: 140%, $cri: center) {
  overflow: hidden;
  img {
    position: relative;
    width: $mag;
    max-width: none;
    @if $cri == center {
      margin-left: -($mag - 100) / 2;
    }
    @if $cri == right {
      margin-left: -($mag - 100);
    }
  }
}

@mixin reverseDecoration {
  text-decoration: none !important;
  @include hover {
    text-decoration: underline !important;
  }
}

@mixin gradient($c1: #000, $c2: #fff) {
  @include background(linear-gradient($c1, $c2));
  @include filter-gradient($c1, $c2);
}

@mixin sans-serif() {
  font-family: Verdana, Helvetica, Arial, sans-serif;
}
@mixin serif() {
  font-family: 'Times New Roman', Times, Garamond, Georgia, serif;
}
@mixin icon($type: 'fa') {
  @if $type == 'fa' {
    font-family: 'Font Awesome 5 Pro';
  } @else if $type == 'ion' {
    font-family: 'Ionicons';
  }
}

@mixin text_abr($line: '2', $line-height: '1.5') {
  @if $line == '1' {
    width: 100%;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  } @else {
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: $line;
    line-height: $line-height;
    .firefox &,
    .ie & {
      max-height: $line * $line-height * 1em;
    }
  }
}

@mixin vertical($pos: '') {
  writing-mode: tb-rl;
  writing-mode: vertical-rl;
  -moz-writing-mode: vertical-rl;
  -o-writing-mode: vertical-rl;
  -webkit-writing-mode: vertical-rl;
  -webkit-text-orientation: upright;
  -moz-text-orientation: upright;
  -ms-text-orientation: upright;
  text-orientation: upright;
  text-align: left;
  display: inline-block;
  font-feature-settings: normal;
  @if $pos == 'default' {
    writing-mode: lr-tb;
    writing-mode: horizontal-tb;
    -moz-writing-mode: horizontal-tb;
    -o-writing-mode: horizontal-tb;
    -webkit-writing-mode: horizontal-tb;
    -webkit-text-orientation: inherit;
    -moz-text-orientation: inherit;
    -ms-text-orientation: inherit;
    text-orientation: inherit;
  }
}

@mixin imgRatio($width: 16, $height: 9) {
  display: block;
  width: 100%;
  position: relative;
  overflow: hidden;
  &:before {
    content: '';
    display: block;
    width: 100%;
    position: relative;
    padding-top: ($height / $width) * 100%;
  }
  img {
    display: block;
    position: absolute;
    top: -100%;
    bottom: -100%;
    left: -100%;
    right: -100%;
    margin: auto;
    width: 100%;
    height: auto;
  }
}
